



/*POSITION: con esta propiedad le damos posicion a los elementos. Dentro de 
position tenemos;

position: static; con static se considera que no está posicionado.

position: relative; con rrelative, un elemento se puede posicionar tomando como 
punto de referencia su posicion actual y aunque lo ajustemos en otra posicion 
conservará el espacio original que ocupa, como si siguiese ahí y sin afectar a las
demás cajas.

position: absolute; con absolute damos posision pero toma como referencia el viewport, 
y si afecta al resto de elementos porque no mantiene su espacio.

position; fixed;
position: stiky;

Al posicionar un elemento adquiere nuevas propiedades, por ejemplo top, rigth,
bottom,left, z.index.


*/


* {
	font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
	 margin: 0;
	 padding: 0;
 }body {
	 background: rgb(238, 235, 235);
	   
 }
 .contenedor {
	
	display: flex;
	gap: 50px;
	height: auto;
	width: 90%;
	min-width: 250px;
	max-width: 900px;
	background: rgb(223, 213, 213);
	border-radius: 5px;
	padding: 20px;
	margin: 50px auto;
 }
 .contenedor h1 {
	background: linear-gradient(to top, rgb(223, 213, 213), rgb(238, 235, 235));
	border-radius: 5px;
	text-align: center;
	padding: 10px;
	color: #297396;
	 }
	.contenedor p {
	    margin-bottom: 30px;
	 }    
	  .explicación  {
	
		position: relative;
		margin: 0 auto;
		width: auto;
		height: auto;
		background: rgb(223, 213, 213);
	
		
	}
	
	h2 {
		 background: linear-gradient(to top, rgb(223, 213, 213), rgb(238, 235, 235));
		 border-radius: 5px;
		 text-align: center;
		 padding: 10px;
		 color: #297396;
		
	}
	p {
	 padding: 20px;
	}

/*menu*/
.nav {
	background: #297396;
	text-align: center;

}
.nav__li {
	display: inline-block;
	padding: 15px;
	color: white;
}
.nav__li a {
	color: white;
	text-decoration: none;
	padding: 14px;
}
.nav__li:hover >a {
	color: orange;
	
}
.nav__li i {
    margin-right: 8px;
}/*fin menu*//*menu responsive*/
.nav__responsive-button {
	
	padding: 15px 50px;
	text-align: right;
	width: 100%;
	box-sizing: border-box;
}/*fin menu responsive*/.nav__responsive-ul {
	display: none;
			
}







@media only screen and (max-width: 600px) {
	.nav__ul {
		display: none;
		
		
	}
/* 	
	.nav {
		background: linear-gradient(rgb(112, 110, 105), rgb(46, 41, 31),rgb(105, 83, 41));
		background: ;
		width: 100%;
		height: 45px
	} */	
	.nav__responsive-ul {
        min-width: 250px;
		top: -2px;
		display: block;
		z-index: 2;
		height: auto;
		width: 100%;
		list-style: none;
		
		
		
	}	.nav__li-container {
		text-align: left;
       z-index: 2;
		position: absolute;
		display: block;
		width: 60%;
		margin-top: -270px;
		transition: .2s;
		
	}
	
    
    .nav__responsive-button-container {
    
		position: relative;
		background: #297396;
        padding: 2px;
		text-align: right;
		width: 100%;
		box-sizing: border-box;
		z-index: 1;
		
    }	.nav__responsive-button {
     
		
	}
	
	.nav__responsive-li {
		position: relative;
		padding: 10px;
		background:#6BACC9;
		
			}
	.nav__responsive-li i {
		margin-right: 8px;
	}
		.nav__responsive-li a {
			color: white;
			text-decoration: none;		}
        .nav__responsive-li a:hover {
			color: orange;
			text-decoration: none;		}
		
	.nav__responsive-ul:hover > .nav__li-container {
		margin-top: 0px;
	}
	.contenedor {
		display: flex;
		flex-direction: column;
		
	}
}



/* ======================== EJEMPLO CAJAS DE COLORES ================*/

.contenedor-cajas {
	background: rgb(248, 248, 233);
	width: auto;
	height: auto;
}

.contenedor-cajas div{
	width: 120px;
	height: 120px;
	display: block;

}



.caja1{
	background: green;
	

}

.caja2{
	background: violet;
	position: relative;  /*al darle position: relative; podemor darle propiedad 
	top, rigth, bottom y left además de z.indez*/
	top: 20px;
	left: 20px;


}

.caja3{
	position: relative;
	background: orange;
	z-index: 50;/*con z.index podemos dar jerarquía de orden en eje Z. Cuanto mayor 
	es el numero mas al frente se mostrará. z.index es 0 por defecto, podemos posicionar
	elementos por encima de 0 y por debajo de 0. en este ejemplo tenemos a caja3 por 
	encima de caja2. Se recomienda dar valores de al menos de 50 en 50, así si vamos
	añadiendo elementos tenemos margen de ir colocandolos es la capa correspondiente.
	*/
	


}
.caja4{
	background: grey;
	position: relative;
	top: 20px;/*cuando damos valor a top y left, bottom y rigth no se tendrán en cuenta, 
	poque top y left tienen mas importancia y jerarquía. Si ponemos top y left a 0px 
	veremos entonces que si toma los valores de bottom y rigth. (probar ejemplo)*/
	left: 20px;
	bottom: 20px;
	right: 20px;

}
/* ======================== EJEMPLO CAJAS DE COLORES FIN ================*/


/*boton*/

.boton {
	box-sizing: border-box;
	display: block;
	width: 35%;
	margin: 0 auto;
	padding: 15px;
	border: none;
	background: #6BACC9;
	text-align: center;
	text-decoration: none;
	color: #fff;
	border-radius: 5px;
	margin-top: 5px;
	
	
}
.boton:hover {
	
	display: block;
	width: 35%;
	margin: 0 auto;
	padding: 15px;
	border: none;
	background: #297396;
	text-align: center;
	text-decoration: none;
	color: orange;
	border-radius: 5px;
	margin-top: 5px;
	
	

}
